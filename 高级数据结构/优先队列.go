package 高级数据结构

// 优先队列:
// 优先级别 可以自定义
//
// 实现方法:
// 二叉堆的结构, binary heap
// 本质:
// 利用一个数组实现完全二叉树
// 完全二叉树: 叶子节点都满的二叉树

//  特性:
// 数组里的第一个元素 array[0]拥有最高优先级
// 给定一个下标 i, 那么对于array[i] 元素而言:
// 父节点对应的元素下标: (i-1)/2
// 左叶子节点对应的元素下标: 2*i + 1
// 右叶子节点对应的元素下标: 2*i + 2

//数组中每个元素的优先级必须高于他的两侧子节点
//
//最基本的操作:
//	向上筛选:
//	 3
//  5  9
// 2
// 时间复杂度: 		logk
// 	向下筛选:

// 优先队列初始化:
// 时间复杂度 O(n)

//
//前缀树:

//	给定一系列构成字典的字符串, 要求在字典中找出所有以 ABC 开头的字符串
//  方法一: 暴力
//    时间复杂度: O(M*N)
//  方法二: 前缀树
//    时间复杂度: O(M) 不是 O(N)  只是前缀的时间复杂度

// 性质:
// 每个节点至少包含两个属性
// children: 数组或集合, 罗列出每个分支当中包含的所有字符
// isEnd 表示该节点是否为某字符串的结尾
// 根节点是空的

//